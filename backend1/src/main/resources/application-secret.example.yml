# Application Configuration Example
# Copy this file to application-secret.yml and update the values
# This file contains sensitive configuration that should not be committed to version control

spring:
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:knut4}
    username: ${DB_USER:knut4_user}
    password: ${DB_PASSWORD:knut4_password}
    driver-class-name: org.postgresql.Driver
    
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    
  security:
    jwt:
      secret-key: ${JWT_SECRET:your-super-secret-jwt-key-change-this-in-production-minimum-32-characters}
      access-token-expiration: ${JWT_ACCESS_TOKEN_EXPIRATION:3600000}  # 1 hour
      refresh-token-expiration: ${JWT_REFRESH_TOKEN_EXPIRATION:86400000}  # 24 hours
      
  redis:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    password: ${REDIS_PASSWORD:}
    timeout: 2000ms
    
  mail:
    host: ${EMAIL_HOST:smtp.gmail.com}
    port: ${EMAIL_PORT:587}
    username: ${EMAIL_USERNAME:}
    password: ${EMAIL_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            
  servlet:
    multipart:
      max-file-size: ${MAX_FILE_SIZE:10MB}
      max-request-size: ${MAX_FILE_SIZE:10MB}

# Server Configuration
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api/v1
    
# Logging Configuration
logging:
  level:
    com.knut4: ${LOG_LEVEL:INFO}
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: ${LOG_FILE_PATH:/app/logs/application.log}

# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: ${ACTUATOR_ENDPOINTS_ENABLED:health,info,metrics}
      base-path: /actuator
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      simple:
        enabled: ${METRICS_EXPORT_ENABLED:false}

# Application Specific Configuration
app:
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:8080}
    allowed-methods: GET,POST,PUT,DELETE,OPTIONS
    allowed-headers: Origin,Content-Type,Accept,Authorization,X-Requested-With
    allow-credentials: true
    
  security:
    csrf-enabled: ${CSRF_ENABLED:true}
    
  upload:
    path: ${UPLOAD_PATH:/tmp/uploads}
    allowed-extensions: jpg,jpeg,png,gif,pdf,doc,docx
    max-size-per-file: 10MB
    
  # Rate limiting (for future implementation)
  rate-limit:
    enabled: false
    requests-per-minute: 60
    
  # Feature flags (for future implementation)
  features:
    email-verification: false
    two-factor-auth: false
    social-login: false